"nnoremap <C-L> <Cmd>nohlsearch<Bar>diffupdate<CR><C-L>

" Plugins ---------------------------------------------
call plug#begin(stdpath('data') . '/plugged') "install to XDG_DATA_HOME/nvim/plugged
" Themes
"Plug 'github/copilot.vim'
Plug 'Shatur/neovim-ayu'
Plug 'sainnhe/gruvbox-material'
Plug 'Yazeed1s/oh-lucy.nvim'

Plug 'neovim/nvim-lspconfig'
Plug 'nvim-treesitter/nvim-treesitter', { 'do': ':TSUpdate' }
Plug 'nvim-treesitter/nvim-treesitter-textobjects'

Plug 'lewis6991/gitsigns.nvim'

Plug 'lervag/vimtex'

Plug 'jose-elias-alvarez/null-ls.nvim'
Plug 'nvim-lua/plenary.nvim'

Plug 'hrsh7th/nvim-cmp'
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/cmp-buffer'
Plug 'hrsh7th/cmp-path'
Plug 'hrsh7th/cmp-cmdline'

Plug 'hrsh7th/vim-vsnip'
Plug 'hrsh7th/cmp-vsnip'
call plug#end()

" Keybindings ----------------------------------------
" disable arrow keys in normal mode
let mapleader =" "

noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

nnoremap <leader><leader> <c-^>

" UI -------------------------------------------------
set number " show line numbers
set title " show filename
set signcolumn=number " merge sign column and number column into one
set mouse=a

set cmdheight=0
set showcmdloc=statusline

set statusline=%f\ %h%w%m%r
set statusline+=%=
set statusline+=\ %3.s\ %8.(%l,%c%v%)
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}\ [%{&fileformat}\]

" Settings -------------------------------------------
set autowrite " writes buffer on suspend

set fileencoding=utf-8

set tabstop=4
set shiftwidth=4 " when oindenting with '>', use 4 spaces width
set shiftround
set expandtab " On pressing tab, insert 4 spaces

set breakindent

set scrolloff=5 sidescrolloff=5

set lazyredraw
set updatetime=250

set undofile

" search
set smartcase "Enable smart-case search
set ignorecase "Always case-insensitive

" folding
"set foldenable
"set foldnestmax=10 " 10 nested fold max
"set foldmethod=indent " fold based on indent level

set splitbelow splitright

set list
set listchars=tab:•\ ,trail:•,extends:>,precedes:<

" netrw config
let g:netrw_liststyle = 3 " enable tree view
let g:netrw_banner = 0 " hide banner

" highlist text on yank for 200 millisecs
augroup highlight_yank
    au!
    autocmd TextYankPost * silent! lua vim.highlight.on_yank({higroup="Visual", timeout=200})
augroup end

augroup textwidth
    au!
    autocmd FileType markdown,tex setlocal textwidth=80
augroup end

" Terminal ---------------------------------------------
tnoremap <Esc> <C-\><C-n>

" open terminal in vertical/horizontal split
command! Vterm vsplit <Bar> term
command! Sterm split <Bar> term
command! Tterm tabnew <Bar> term

augroup Terminal
    au!
    autocmd TermOpen * setlocal statusline=%{b:term_title}
    autocmd TermOpen * setlocal nonumber norelativenumber
augroup END

"packadd termdebug " gdb integration
let g:termdebug_wide=1 "show gdb buffer in vertical split

" Theming ---------------------------------------------
if (has("termguicolors"))
    set termguicolors
endif

"let g:gruvbox_material_background='medium'
"let g:gruvbox_material_palette='orignal'
"let g:moonlight_borders=v:true

colorscheme oh-lucy

lua require("lsp")
lua require("nulls")
lua require("treesitter")
lua require("gitsigns").setup()

set completeopt=menu,menuone,noselect
set shortmess+=c

inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
